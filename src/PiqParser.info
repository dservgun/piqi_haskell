-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.5 from PiqParser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Statements                        (0)
	Statements -> Statement                            (1)
	Statements -> Statements Statement                 (2)
	Statement -> Alias                                 (3)
	Alias -> alias Identifier Int                      (4)
	Identifier -> identifier                           (5)
	Int -> int                                         (6)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	alias          { TokenAlias }
	int            { TokenType $$ }
	identifier     { TokenIdentifier $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Statements      rules 1, 2
	Statement       rule  3
	Alias           rule  4
	Identifier      rule  5
	Int             rule  6

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	alias          shift, and enter state 4

	Statements     goto state 5
	Statement      goto state 2
	Alias          goto state 3

State 1


	alias          shift, and enter state 4

	Statement      goto state 2
	Alias          goto state 3

State 2

	Statements -> Statement .                           (rule 1)

	alias          reduce using rule 1
	%eof           reduce using rule 1


State 3

	Statement -> Alias .                                (rule 3)

	alias          reduce using rule 3
	%eof           reduce using rule 3


State 4

	Alias -> alias . Identifier Int                     (rule 4)

	identifier     shift, and enter state 8

	Identifier     goto state 7

State 5

	%start_parser -> Statements .                       (rule 0)
	Statements -> Statements . Statement                (rule 2)

	alias          shift, and enter state 4
	%eof           accept

	Statement      goto state 6
	Alias          goto state 3

State 6

	Statements -> Statements Statement .                (rule 2)

	alias          reduce using rule 2
	%eof           reduce using rule 2


State 7

	Alias -> alias Identifier . Int                     (rule 4)

	int            shift, and enter state 10

	Int            goto state 9

State 8

	Identifier -> identifier .                          (rule 5)

	int            reduce using rule 5


State 9

	Alias -> alias Identifier Int .                     (rule 4)

	alias          reduce using rule 4
	%eof           reduce using rule 4


State 10

	Int -> int .                                        (rule 6)

	alias          reduce using rule 6
	%eof           reduce using rule 6


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 7
Number of terminals: 3
Number of non-terminals: 6
Number of states: 11
